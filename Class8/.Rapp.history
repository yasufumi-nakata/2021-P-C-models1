install.packages("languageserver")
ls
yl<-0.5*gl*t^2
gl
a
y1<-0.5*g1*t^2
g1<-9.8
y1<-o.5*g1*t^2
y1<-0.5*g1*t^2
t<-[0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0]
t<-0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0
t<-c(1,2,3,4,5,6,7,8,9,10)
y1<-0.5*g1*t^2
y1
t<-c(0,1,2,3,4,5,6,7,8,9,10)
y1
y1
y1<-0.5*g1*t^2
y1
g2<-4.9
y2<-0.5*g2*t^2
g2
y2
g3<-1.0
y3<-0.5*g3*t^2
g3
y3
plot(t,y1)
points(t,y1,type="1",col="BLUE")
points(t,y1,type="1",col="BLUE")
x<=c(100,200,300,400,500,600,700,800,900,100)
x<-c(100,200,300,400,500,600,700,800,900,100)
x
y<-c(169,255,320,399,455,530,511,719,791,818)
x<-c(100,200,300,400,500,600,700,800,900,1000)
y
lsfit(x,y)
points(t,y1,type="1",col="BLUE")
points(t,y1,type="l",col="BLUE")
lsfit(x,y)$coefficients
lsfit(x,y)$coefficients[1]
lsfit(x,y)$coefficients[2]
a<-lsfit(x,y)$coefficients[1]
b<-lsfit(x,y)$coefficients[2]
a
b
Y<-a+b*x
Y
var(Y)/var(y)
points(t,y1,type="l",col="GREEN")
points(t,y2,type="l",col="GREEN")
points(t,y3,type="l",col="RED")
points(t,y1,type="l",col="BLUE")
plot(x,y,type="n",xlim=c(0,1250),ylim=c(0,1250))
points(x,y,type="p")
abline(a,b)
z<-c(8,7,6,3,9,8,4,10,5,6)
z
lsfit(cbind(x,z),y)
y2<-log(y)
x2<-log(x)
lsfit(x2,y2)
x_all<-c(0:1300)
lsfit(x2,y2)
a2<-lsfit(x2,y2)$coefficients[1]
a2
a3<-exp(a2)
b2<-lsfit(x2,y2)$coefficients[2]
Y2<-a3*x^b2
var(Y2)/var(y)
Y2_all<-a3*x_all^b2
plot(xy,type="n",xlim=c(0,1250),ylim=c(0,1250))
plot(x,y,type="n",xlim=c(0,1250),ylim=c(0,1250))
points(c,y,type"@")
points(c,y,type"p")
points(x,y,type"p")
points(x,y,type="p")
points(x_all,Y2_all,type="l")
data<-matrix(scan("ImaginaryData.txt").ncol=24,byrow=T)
data<-matrix(scan("ImaginaryData.txt"),ncol=24,byrow=T)
dim(data)
dataResult<-prcomp(data, scale=T)
summary(dataResult)
biplot(dataResult)
dataResult $rotation
dataResult $x
biplot(dataResult)
install.packages("psych")
install.packages("GPArotation")
library(psych)
library(GPArotation)
KMO(data)
cor_matrix<-cor(data)
fa.parallel(cor_matrix)
VSS(data,n = 8)
cor_data<-cor(data)
eigenvalues<-eigen(cor_data)$values
plot(c(1:length(eigenvalues)),eigenvalues,type="b")
number_of_facter<-3
result<-fa(data,nfactors=number_of_factor,fm="ml",rotate=“promax”)
result<-fa(data,nfactors=number_of_factor,fm="ml",rotate="promax")
number_of_factor<-3
result<-fa(data,nfactors=number_of_factor,fm="ml",rotate="promax")
print(result,digits=3,sort=T)
fa.diagram(result)
data<matrix(c(0.0,1.0,1.5,2.3,1.2,3.2,1.0,0.0,1.2,3.5,2.5,2.7,1.5,1.2,0.0,1.3,2.7,3.0,2.3,3.5,1.3,0.0,1.6,5.6,1.2,2.5,2.7,1.6,0.0,4.9,3.2, 2.7,3.0,5.6,4.9,0.0), ncol=6, byrow=T)
data<-matrix(c(0.0,1.0,1.5,2.3,1.2,3.2,1.0,0.0,1.2,3.5,2.5,2.7,1.5,1.2,0.0,1.3,2.7,3.0,2.3,3.5,1.3,0.0,1.6,5.6,1.2,2.5,2.7,1.6,0.0,4.9,3.2, 2.7,3.0,5.6,4.9,0.0), ncol=6, byrow=T)
out1<-cmdscale(data)
out1
plot(out1,pch=1:6)
legend("topright",legend=c("東京駅","品川駅","渋谷駅","池袋駅","上野駅","日吉駅"), pch = 1:6)))
legend("topright",legend=c("東京駅","品川駅","渋谷駅","池袋駅","上野駅","日吉駅"), pch = 1:6)
legend("topright",legend=c("東京駅","品川駅","渋谷駅","池袋駅","上野駅","日吉駅"), pch = 1:6)
legend("topright",legend=c("tokyo","shinagawa","shibuya","ikebukuro","ueno"","hiyoshi"), pch = 1:6)
legend("topright",legend=c("tokyo","shinagawa","shibuya","ikebukuro","ueno","hiyoshi"), pch = 1:6)
legend("topright",legend=c("tokyo","shinagawa","shibuya","ikebukuro","ueno","hiyoshi"), pch = 1:6)
